import pygame
pygame.init()  
pygame.display.set_caption("images and sound!")  # sets the window title
screen = pygame.display.set_mode((800, 800))  # creates game screen
screen.fill((0,0,0))
clock = pygame.time.Clock() #set up clock
gameover = False #variable to run our game loop
   # enemy variables
    #expos = 210
    #eypos = 630
    #timer = 0
enemy1=[200, 630, 0]
def enemyMove(enemyinfo):
    if enemyinfo[2]< 10:
        enemyinfo[0]+=1
    elif enemyinfo[2]<20:
        enemyinfo[0]-=1
    else:
        enemyinfo[2] = 0 #reset timer
#CONSTANTS
LEFT=0
RIGHT=1
UP = 2
DOWN = 3

#load images
image = pygame.image.load("C:/Users/752448/Downloads/space.png")

#player variables
xpos = 500 #xpos of player
ypos = 200 #ypos of player
vx = 0 #x velocity of player
vy = 0 #y velocity of player
keys = [False, False, False, False] #this list holds whether each key has been pressed
isOnGround = False #this variable stops gravity from pulling you down more when on a platform

#SOUND--------------------------------------------------------------------
jump = pygame.mixer.Sound("C:/Users/752448/New folder/jump (1).ogg")#load in sound effect
music = pygame.mixer.music.load('C:/Users/752448/Downloads/music.ogg')#load in background music
pygame.mixer.music.play(-1)#start background music
#-------------------------------------------------------------------------

while not gameover: #GAME LOOP############################################################
    clock.tick(60) #FPS
    
    #Input Section------------------------------------------------------------
    for event in pygame.event.get(): #quit game if x is pressed in top corner
        if event.type == pygame.QUIT:
            gameover = True
      
        if event.type == pygame.KEYDOWN: #keyboard input
            if event.key == pygame.K_LEFT:
                keys[LEFT]=True
            if event.key == pygame.K_RIGHT:
                keys[RIGHT]=True

            elif event.key == pygame.K_UP:
                keys[UP]=True
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                keys[LEFT]=False
            if event.key == pygame.K_RIGHT:
               keys[RIGHT]=False  
                  
            elif event.key == pygame.K_UP:
                keys[UP]=False
          
    #physics section--------------------------------------------------------------------
    #LEFT MOVEMENT
    if keys[LEFT]==True:
        vx=-3
        direction = LEFT
    elif keys[RIGHT]==True:
        vx=3
        direction = RIGHT
    #turn off velocity
    else:
        vx = 0
        #JUMPING
    if keys[UP] == True and isOnGround == True: #only jump when on the ground
        vy = -8
        isOnGround = False
        direction = UP
        jump.play()
    
    

    
    #COLLISION
    if xpos>100 and xpos<200 and ypos+40 >750 and ypos+40 <770:
        ypos = 750-40
        isOnGround = True
        vy = 0
    elif xpos>200 and xpos<300 and ypos+40 >650 and ypos+40 <670:
        ypos = 650-40
        isOnGround = True
        vy = 0
    elif xpos>300 and xpos<400 and ypos+40 >550 and ypos+40 <570:
        ypos = 550-40
        isOnGround = True
        vy = 0
    elif xpos>400 and xpos<500 and ypos+40 >450 and ypos+40 <470:
        ypos = 450-40
        isOnGround = True
        vy = 0
    elif xpos>500 and xpos<600 and ypos+40 >350 and ypos+40 <370:
        ypos = 350-40
        isOnGround = True
        vy = 0
    elif xpos>600 and xpos<700 and ypos+40 >250 and ypos+40 <270:
        ypos = 250-40
        isOnGround = True
        vy = 0
    else:
        isOnGround = False
    
    #stop falling if on bottom of game screen
    if ypos > 760:
        isOnGround = True
        vy = 0
        ypos = 760
    
    #gravity
    if isOnGround == False:
        vy+=.2 #notice this grows over time, aka ACCELERATION
    

    #update player position
    xpos+=vx 
    ypos+=vy
    
    
    

    
    # function call for enemy movement
    enemyMove(enemy1)


    # RENDER Section--------------------------------------------------------------------------------
            
    screen.fill((255,255,255)) #wipe screen so it doesn't smear
  
    screen.blit(image, (0,0)) #draw background image
  
    pygame.draw.rect(screen, (200, 0, 255), (xpos, ypos, 20, 40)) #draw player
    pygame.draw.rect(screen, (200, 0, 0), (enemy1[0], enemy1[1], 20, 40)) #draw enemy
    
    #first platform
    pygame.draw.rect(screen, (200, 00, 00), (100, 750, 100, 20))
    
    #second platform
    pygame.draw.rect(screen, (250, 100, 20), (200, 650, 100, 20))
    
    #third platform
    pygame.draw.rect(screen, (180, 100, 10), (300, 550, 100, 20))
    #fourth platform 
    pygame.draw.rect(screen, (0, 200, 0), (400, 450, 100, 20))
    
    pygame.draw.rect(screen, (0, 0, 200), (500, 350, 100, 20))
    
    pygame.draw.rect(screen, (200, 100, 200), (600, 250, 100, 20))
    
    pygame.display.flip()#this flips the buffer (memory) where stuff has been "drawn" to the actual screen
    
#end game loop------------------------------------------------------------------------------
pygame.quit()
